<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ifudata.dvp.pay.dao.mapper.interfaces.PayTenantConfigMapper" >
  <resultMap id="BaseResultMap" type="com.ifudata.dvp.pay.dao.mapper.bo.PayTenantConfig" >
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="TENANT_NAME" property="tenantName" jdbcType="VARCHAR" />
    <result column="CONFIG_TYPE" property="configType" jdbcType="VARCHAR" />
    <result column="CONFIG_NAME" property="configName" jdbcType="VARCHAR" />
    <result column="CONFIG_INFO" property="configInfo" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TENANT_ID, TENANT_NAME, CONFIG_TYPE, CONFIG_NAME, CONFIG_INFO, STATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ifudata.dvp.pay.dao.mapper.bo.PayTenantConfigCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pay_tenant_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ifudata.dvp.pay.dao.mapper.bo.PayTenantConfigCriteria" >
    delete from pay_tenant_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ifudata.dvp.pay.dao.mapper.bo.PayTenantConfig" >
    insert into pay_tenant_config (TENANT_ID, TENANT_NAME, CONFIG_TYPE, 
      CONFIG_NAME, CONFIG_INFO, STATE
      )
    values (#{tenantId,jdbcType=VARCHAR}, #{tenantName,jdbcType=VARCHAR}, #{configType,jdbcType=VARCHAR}, 
      #{configName,jdbcType=VARCHAR}, #{configInfo,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ifudata.dvp.pay.dao.mapper.bo.PayTenantConfig" >
    insert into pay_tenant_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        TENANT_ID,
      </if>
      <if test="tenantName != null" >
        TENANT_NAME,
      </if>
      <if test="configType != null" >
        CONFIG_TYPE,
      </if>
      <if test="configName != null" >
        CONFIG_NAME,
      </if>
      <if test="configInfo != null" >
        CONFIG_INFO,
      </if>
      <if test="state != null" >
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="tenantName != null" >
        #{tenantName,jdbcType=VARCHAR},
      </if>
      <if test="configType != null" >
        #{configType,jdbcType=VARCHAR},
      </if>
      <if test="configName != null" >
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configInfo != null" >
        #{configInfo,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ifudata.dvp.pay.dao.mapper.bo.PayTenantConfigCriteria" resultType="java.lang.Integer" >
    select count(*) from pay_tenant_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pay_tenant_config
    <set >
      <if test="record.tenantId != null" >
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantName != null" >
        TENANT_NAME = #{record.tenantName,jdbcType=VARCHAR},
      </if>
      <if test="record.configType != null" >
        CONFIG_TYPE = #{record.configType,jdbcType=VARCHAR},
      </if>
      <if test="record.configName != null" >
        CONFIG_NAME = #{record.configName,jdbcType=VARCHAR},
      </if>
      <if test="record.configInfo != null" >
        CONFIG_INFO = #{record.configInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pay_tenant_config
    set TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      TENANT_NAME = #{record.tenantName,jdbcType=VARCHAR},
      CONFIG_TYPE = #{record.configType,jdbcType=VARCHAR},
      CONFIG_NAME = #{record.configName,jdbcType=VARCHAR},
      CONFIG_INFO = #{record.configInfo,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>