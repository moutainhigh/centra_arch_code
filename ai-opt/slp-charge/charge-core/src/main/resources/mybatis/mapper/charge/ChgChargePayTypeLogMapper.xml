<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.charge.dao.mapper.interfaces.ChgChargePayTypeLogMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.charge.dao.mapper.bo.ChgChargePayTypeLog" >
    <id column="pay_type_id" property="payTypeId" jdbcType="BIGINT" />
    <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
    <result column="charge_id" property="chargeId" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="pay_style" property="payStyle" jdbcType="INTEGER" />
    <result column="paid_fee" property="paidFee" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pay_type_id, tenant_id, charge_id, order_id, pay_style, paid_fee
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.charge.dao.mapper.bo.ChgChargePayTypeLogCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from chg_charge_pay_type_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Long" >
    select 
    <include refid="Base_Column_List" />
    from chg_charge_pay_type_log
    where pay_type_id = #{payTypeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Long" >
    delete from chg_charge_pay_type_log
    where pay_type_id = #{payTypeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.slp.charge.dao.mapper.bo.ChgChargePayTypeLogCriteria" >
    delete from chg_charge_pay_type_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.charge.dao.mapper.bo.ChgChargePayTypeLog" >
    insert into chg_charge_pay_type_log (pay_type_id, tenant_id, charge_id, 
      order_id, pay_style, paid_fee
      )
    values (#{payTypeId,jdbcType=BIGINT}, #{tenantId,jdbcType=VARCHAR}, #{chargeId,jdbcType=BIGINT}, 
      #{orderId,jdbcType=VARCHAR}, #{payStyle,jdbcType=INTEGER}, #{paidFee,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.charge.dao.mapper.bo.ChgChargePayTypeLog" >
    insert into chg_charge_pay_type_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="payTypeId != null" >
        pay_type_id,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="chargeId != null" >
        charge_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="payStyle != null" >
        pay_style,
      </if>
      <if test="paidFee != null" >
        paid_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="payTypeId != null" >
        #{payTypeId,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="chargeId != null" >
        #{chargeId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="payStyle != null" >
        #{payStyle,jdbcType=INTEGER},
      </if>
      <if test="paidFee != null" >
        #{paidFee,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.charge.dao.mapper.bo.ChgChargePayTypeLogCriteria" resultType="java.lang.Integer" >
    select count(*) from chg_charge_pay_type_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update chg_charge_pay_type_log
    <set >
      <if test="record.payTypeId != null" >
        pay_type_id = #{record.payTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeId != null" >
        charge_id = #{record.chargeId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.payStyle != null" >
        pay_style = #{record.payStyle,jdbcType=INTEGER},
      </if>
      <if test="record.paidFee != null" >
        paid_fee = #{record.paidFee,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update chg_charge_pay_type_log
    set pay_type_id = #{record.payTypeId,jdbcType=BIGINT},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      charge_id = #{record.chargeId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      pay_style = #{record.payStyle,jdbcType=INTEGER},
      paid_fee = #{record.paidFee,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.slp.charge.dao.mapper.bo.ChgChargePayTypeLog" >
    update chg_charge_pay_type_log
    <set >
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="chargeId != null" >
        charge_id = #{chargeId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="payStyle != null" >
        pay_style = #{payStyle,jdbcType=INTEGER},
      </if>
      <if test="paidFee != null" >
        paid_fee = #{paidFee,jdbcType=BIGINT},
      </if>
    </set>
    where pay_type_id = #{payTypeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.slp.charge.dao.mapper.bo.ChgChargePayTypeLog" >
    update chg_charge_pay_type_log
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
      charge_id = #{chargeId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=VARCHAR},
      pay_style = #{payStyle,jdbcType=INTEGER},
      paid_fee = #{paidFee,jdbcType=BIGINT}
    where pay_type_id = #{payTypeId,jdbcType=BIGINT}
  </update>
</mapper>