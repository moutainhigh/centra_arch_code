<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.product.dao.mapper.attach.ProdCatAttrXmlAttachMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.product.dao.mapper.bo.ProdCatAttr" >
    <id column="CAT_ATTR_ID" property="catAttrId" jdbcType="VARCHAR" />
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="PRODUCT_CAT_ID" property="productCatId" jdbcType="VARCHAR" />
    <result column="ATTR_ID" property="attrId" jdbcType="DECIMAL" />
    <result column="ATTR_GROUP_ID" property="attrGroupId" jdbcType="DECIMAL" />
    <result column="ATTR_TYPE" property="attrType" jdbcType="VARCHAR" />
    <result column="IS_PICTURE" property="isPicture" jdbcType="CHAR" />
    <result column="IS_NECESSARY" property="isNecessary" jdbcType="CHAR" />
    <result column="SERIAL_NUMBER" property="serialNumber" jdbcType="DECIMAL" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="OPER_ID" property="operId" jdbcType="DECIMAL" />
    <result column="OPER_TIME" property="operTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CAT_ATTR_ID, TENANT_ID, PRODUCT_CAT_ID, ATTR_ID, ATTR_GROUP_ID, ATTR_TYPE, IS_PICTURE, 
    IS_NECESSARY, SERIAL_NUMBER, STATE, OPER_ID, OPER_TIME
  </sql>
  <select id="selectCatAttrIdS" resultType="java.lang.String" parameterType="com.ai.slp.product.dao.mapper.bo.ProdCatAttrCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    CAT_ATTR_ID
    <include refid="Base_Column_List" />
    from prod_cat_attr
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>

</mapper>