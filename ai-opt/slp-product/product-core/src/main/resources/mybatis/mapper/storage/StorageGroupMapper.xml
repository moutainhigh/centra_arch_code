<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.product.dao.mapper.interfaces.storage.StorageGroupMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.product.dao.mapper.bo.storage.StorageGroup" >
    <id column="STORAGE_GROUP_ID" property="storageGroupId" jdbcType="VARCHAR" />
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="STANDED_PROD_ID" property="standedProdId" jdbcType="VARCHAR" />
    <result column="ROUTE_GROUP_ID" property="routeGroupId" jdbcType="VARCHAR" />
    <result column="STORAGE_GROUP_NAME" property="storageGroupName" jdbcType="VARCHAR" />
    <result column="IS_SALE_ATTR" property="isSaleAttr" jdbcType="CHAR" />
    <result column="LOW_SALE_PRICE" property="lowSalePrice" jdbcType="DECIMAL" />
    <result column="HIGH_SALE_PRICE" property="highSalePrice" jdbcType="DECIMAL" />
    <result column="SERIAL_NUMBER" property="serialNumber" jdbcType="DECIMAL" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="CREATE_ID" property="createId" jdbcType="DECIMAL" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="OPER_ID" property="operId" jdbcType="DECIMAL" />
    <result column="OPER_TIME" property="operTime" jdbcType="TIMESTAMP" />
    <result column="SUPPLIER_ID" property="supplierId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    STORAGE_GROUP_ID, TENANT_ID, STANDED_PROD_ID, ROUTE_GROUP_ID, STORAGE_GROUP_NAME, 
    IS_SALE_ATTR, LOW_SALE_PRICE, HIGH_SALE_PRICE, SERIAL_NUMBER, STATE, CREATE_ID, CREATE_TIME, 
    OPER_ID, OPER_TIME, SUPPLIER_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.product.dao.mapper.bo.storage.StorageGroupCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from storage_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from storage_group
    where STORAGE_GROUP_ID = #{storageGroupId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from storage_group
    where STORAGE_GROUP_ID = #{storageGroupId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.slp.product.dao.mapper.bo.storage.StorageGroupCriteria" >
    delete from storage_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.product.dao.mapper.bo.storage.StorageGroup" >
    insert into storage_group (STORAGE_GROUP_ID, TENANT_ID, STANDED_PROD_ID, 
      ROUTE_GROUP_ID, STORAGE_GROUP_NAME, IS_SALE_ATTR, 
      LOW_SALE_PRICE, HIGH_SALE_PRICE, SERIAL_NUMBER, 
      STATE, CREATE_ID, CREATE_TIME, 
      OPER_ID, OPER_TIME, SUPPLIER_ID
      )
    values (#{storageGroupId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{standedProdId,jdbcType=VARCHAR}, 
      #{routeGroupId,jdbcType=VARCHAR}, #{storageGroupName,jdbcType=VARCHAR}, #{isSaleAttr,jdbcType=CHAR}, 
      #{lowSalePrice,jdbcType=DECIMAL}, #{highSalePrice,jdbcType=DECIMAL}, #{serialNumber,jdbcType=DECIMAL}, 
      #{state,jdbcType=VARCHAR}, #{createId,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{operId,jdbcType=DECIMAL}, #{operTime,jdbcType=TIMESTAMP}, #{supplierId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.product.dao.mapper.bo.storage.StorageGroup" >
    insert into storage_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storageGroupId != null" >
        STORAGE_GROUP_ID,
      </if>
      <if test="tenantId != null" >
        TENANT_ID,
      </if>
      <if test="standedProdId != null" >
        STANDED_PROD_ID,
      </if>
      <if test="routeGroupId != null" >
        ROUTE_GROUP_ID,
      </if>
      <if test="storageGroupName != null" >
        STORAGE_GROUP_NAME,
      </if>
      <if test="isSaleAttr != null" >
        IS_SALE_ATTR,
      </if>
      <if test="lowSalePrice != null" >
        LOW_SALE_PRICE,
      </if>
      <if test="highSalePrice != null" >
        HIGH_SALE_PRICE,
      </if>
      <if test="serialNumber != null" >
        SERIAL_NUMBER,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="createId != null" >
        CREATE_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="operId != null" >
        OPER_ID,
      </if>
      <if test="operTime != null" >
        OPER_TIME,
      </if>
      <if test="supplierId != null" >
        SUPPLIER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storageGroupId != null" >
        #{storageGroupId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="standedProdId != null" >
        #{standedProdId,jdbcType=VARCHAR},
      </if>
      <if test="routeGroupId != null" >
        #{routeGroupId,jdbcType=VARCHAR},
      </if>
      <if test="storageGroupName != null" >
        #{storageGroupName,jdbcType=VARCHAR},
      </if>
      <if test="isSaleAttr != null" >
        #{isSaleAttr,jdbcType=CHAR},
      </if>
      <if test="lowSalePrice != null" >
        #{lowSalePrice,jdbcType=DECIMAL},
      </if>
      <if test="highSalePrice != null" >
        #{highSalePrice,jdbcType=DECIMAL},
      </if>
      <if test="serialNumber != null" >
        #{serialNumber,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operId != null" >
        #{operId,jdbcType=DECIMAL},
      </if>
      <if test="operTime != null" >
        #{operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.product.dao.mapper.bo.storage.StorageGroupCriteria" resultType="java.lang.Integer" >
    select count(*) from storage_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update storage_group
    <set >
      <if test="record.storageGroupId != null" >
        STORAGE_GROUP_ID = #{record.storageGroupId,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null" >
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.standedProdId != null" >
        STANDED_PROD_ID = #{record.standedProdId,jdbcType=VARCHAR},
      </if>
      <if test="record.routeGroupId != null" >
        ROUTE_GROUP_ID = #{record.routeGroupId,jdbcType=VARCHAR},
      </if>
      <if test="record.storageGroupName != null" >
        STORAGE_GROUP_NAME = #{record.storageGroupName,jdbcType=VARCHAR},
      </if>
      <if test="record.isSaleAttr != null" >
        IS_SALE_ATTR = #{record.isSaleAttr,jdbcType=CHAR},
      </if>
      <if test="record.lowSalePrice != null" >
        LOW_SALE_PRICE = #{record.lowSalePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.highSalePrice != null" >
        HIGH_SALE_PRICE = #{record.highSalePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.serialNumber != null" >
        SERIAL_NUMBER = #{record.serialNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createId != null" >
        CREATE_ID = #{record.createId,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operId != null" >
        OPER_ID = #{record.operId,jdbcType=DECIMAL},
      </if>
      <if test="record.operTime != null" >
        OPER_TIME = #{record.operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.supplierId != null" >
        SUPPLIER_ID = #{record.supplierId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update storage_group
    set STORAGE_GROUP_ID = #{record.storageGroupId,jdbcType=VARCHAR},
      TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      STANDED_PROD_ID = #{record.standedProdId,jdbcType=VARCHAR},
      ROUTE_GROUP_ID = #{record.routeGroupId,jdbcType=VARCHAR},
      STORAGE_GROUP_NAME = #{record.storageGroupName,jdbcType=VARCHAR},
      IS_SALE_ATTR = #{record.isSaleAttr,jdbcType=CHAR},
      LOW_SALE_PRICE = #{record.lowSalePrice,jdbcType=DECIMAL},
      HIGH_SALE_PRICE = #{record.highSalePrice,jdbcType=DECIMAL},
      SERIAL_NUMBER = #{record.serialNumber,jdbcType=DECIMAL},
      STATE = #{record.state,jdbcType=VARCHAR},
      CREATE_ID = #{record.createId,jdbcType=DECIMAL},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      OPER_ID = #{record.operId,jdbcType=DECIMAL},
      OPER_TIME = #{record.operTime,jdbcType=TIMESTAMP},
      SUPPLIER_ID = #{record.supplierId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.slp.product.dao.mapper.bo.storage.StorageGroup" >
    update storage_group
    <set >
      <if test="tenantId != null" >
        TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="standedProdId != null" >
        STANDED_PROD_ID = #{standedProdId,jdbcType=VARCHAR},
      </if>
      <if test="routeGroupId != null" >
        ROUTE_GROUP_ID = #{routeGroupId,jdbcType=VARCHAR},
      </if>
      <if test="storageGroupName != null" >
        STORAGE_GROUP_NAME = #{storageGroupName,jdbcType=VARCHAR},
      </if>
      <if test="isSaleAttr != null" >
        IS_SALE_ATTR = #{isSaleAttr,jdbcType=CHAR},
      </if>
      <if test="lowSalePrice != null" >
        LOW_SALE_PRICE = #{lowSalePrice,jdbcType=DECIMAL},
      </if>
      <if test="highSalePrice != null" >
        HIGH_SALE_PRICE = #{highSalePrice,jdbcType=DECIMAL},
      </if>
      <if test="serialNumber != null" >
        SERIAL_NUMBER = #{serialNumber,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        CREATE_ID = #{createId,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operId != null" >
        OPER_ID = #{operId,jdbcType=DECIMAL},
      </if>
      <if test="operTime != null" >
        OPER_TIME = #{operTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supplierId != null" >
        SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
      </if>
    </set>
    where STORAGE_GROUP_ID = #{storageGroupId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.slp.product.dao.mapper.bo.storage.StorageGroup" >
    update storage_group
    set TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      STANDED_PROD_ID = #{standedProdId,jdbcType=VARCHAR},
      ROUTE_GROUP_ID = #{routeGroupId,jdbcType=VARCHAR},
      STORAGE_GROUP_NAME = #{storageGroupName,jdbcType=VARCHAR},
      IS_SALE_ATTR = #{isSaleAttr,jdbcType=CHAR},
      LOW_SALE_PRICE = #{lowSalePrice,jdbcType=DECIMAL},
      HIGH_SALE_PRICE = #{highSalePrice,jdbcType=DECIMAL},
      SERIAL_NUMBER = #{serialNumber,jdbcType=DECIMAL},
      STATE = #{state,jdbcType=VARCHAR},
      CREATE_ID = #{createId,jdbcType=DECIMAL},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      OPER_ID = #{operId,jdbcType=DECIMAL},
      OPER_TIME = #{operTime,jdbcType=TIMESTAMP},
      SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR}
    where STORAGE_GROUP_ID = #{storageGroupId,jdbcType=VARCHAR}
  </update>
</mapper>