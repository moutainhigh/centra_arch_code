<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.balance.dao.mapper.interfaces.FunResBookRestAmountMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.balance.dao.mapper.bo.FunResBookRestAmount" >
    <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
    <result column="owner_id" property="ownerId" jdbcType="BIGINT" />
    <result column="owner_type" property="ownerType" jdbcType="INTEGER" />
    <result column="resource_type" property="resourceType" jdbcType="INTEGER" />
    <result column="rest_amount" property="restAmount" jdbcType="DECIMAL" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    tenant_id, owner_id, owner_type, resource_type, rest_amount, last_update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.balance.dao.mapper.bo.FunResBookRestAmountCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from fun_res_book_rest_amount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ai.slp.balance.dao.mapper.bo.FunResBookRestAmountCriteria" >
    delete from fun_res_book_rest_amount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.balance.dao.mapper.bo.FunResBookRestAmount" >
    insert into fun_res_book_rest_amount (tenant_id, owner_id, owner_type, 
      resource_type, rest_amount, last_update_time
      )
    values (#{tenantId,jdbcType=VARCHAR}, #{ownerId,jdbcType=BIGINT}, #{ownerType,jdbcType=INTEGER}, 
      #{resourceType,jdbcType=INTEGER}, #{restAmount,jdbcType=DECIMAL}, #{lastUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.balance.dao.mapper.bo.FunResBookRestAmount" >
    insert into fun_res_book_rest_amount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
      <if test="ownerType != null" >
        owner_type,
      </if>
      <if test="resourceType != null" >
        resource_type,
      </if>
      <if test="restAmount != null" >
        rest_amount,
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="ownerType != null" >
        #{ownerType,jdbcType=INTEGER},
      </if>
      <if test="resourceType != null" >
        #{resourceType,jdbcType=INTEGER},
      </if>
      <if test="restAmount != null" >
        #{restAmount,jdbcType=DECIMAL},
      </if>
      <if test="lastUpdateTime != null" >
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.balance.dao.mapper.bo.FunResBookRestAmountCriteria" resultType="java.lang.Integer" >
    select count(*) from fun_res_book_rest_amount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fun_res_book_rest_amount
    <set >
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null" >
        owner_id = #{record.ownerId,jdbcType=BIGINT},
      </if>
      <if test="record.ownerType != null" >
        owner_type = #{record.ownerType,jdbcType=INTEGER},
      </if>
      <if test="record.resourceType != null" >
        resource_type = #{record.resourceType,jdbcType=INTEGER},
      </if>
      <if test="record.restAmount != null" >
        rest_amount = #{record.restAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.lastUpdateTime != null" >
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fun_res_book_rest_amount
    set tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=BIGINT},
      owner_type = #{record.ownerType,jdbcType=INTEGER},
      resource_type = #{record.resourceType,jdbcType=INTEGER},
      rest_amount = #{record.restAmount,jdbcType=DECIMAL},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>