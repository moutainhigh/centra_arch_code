<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.balance.dao.mapper.interfaces.FunFundBookMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.balance.dao.mapper.bo.FunFundBook" >
    <id column="book_id" property="bookId" jdbcType="BIGINT" />
    <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="subject_type" property="subjectType" jdbcType="VARCHAR" />
    <result column="subject_id" property="subjectId" jdbcType="BIGINT" />
    <result column="balance" property="balance" jdbcType="BIGINT" />
    <result column="feature_code" property="featureCode" jdbcType="VARCHAR" />
    <result column="book_status" property="bookStatus" jdbcType="VARCHAR" />
    <result column="effect_date" property="effectDate" jdbcType="TIMESTAMP" />
    <result column="expire_date" property="expireDate" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="subs_freeze_id" property="subsFreezeId" jdbcType="BIGINT" />
    <result column="subs_id" property="subsId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    book_id, tenant_id, account_id, subject_type, subject_id, balance, feature_code, 
    book_status, effect_date, expire_date, create_time, subs_freeze_id, subs_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.balance.dao.mapper.bo.FunFundBookCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from fun_fund_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Long" >
    select 
    <include refid="Base_Column_List" />
    from fun_fund_book
    where book_id = #{bookId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Long" >
    delete from fun_fund_book
    where book_id = #{bookId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.slp.balance.dao.mapper.bo.FunFundBookCriteria" >
    delete from fun_fund_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.balance.dao.mapper.bo.FunFundBook" >
    insert into fun_fund_book (book_id, tenant_id, account_id, 
      subject_type, subject_id, balance, 
      feature_code, book_status, effect_date, 
      expire_date, create_time, subs_freeze_id, 
      subs_id)
    values (#{bookId,jdbcType=BIGINT}, #{tenantId,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{subjectType,jdbcType=VARCHAR}, #{subjectId,jdbcType=BIGINT}, #{balance,jdbcType=BIGINT}, 
      #{featureCode,jdbcType=VARCHAR}, #{bookStatus,jdbcType=VARCHAR}, #{effectDate,jdbcType=TIMESTAMP}, 
      #{expireDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{subsFreezeId,jdbcType=BIGINT}, 
      #{subsId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.balance.dao.mapper.bo.FunFundBook" >
    insert into fun_fund_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="subjectType != null" >
        subject_type,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="featureCode != null" >
        feature_code,
      </if>
      <if test="bookStatus != null" >
        book_status,
      </if>
      <if test="effectDate != null" >
        effect_date,
      </if>
      <if test="expireDate != null" >
        expire_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="subsFreezeId != null" >
        subs_freeze_id,
      </if>
      <if test="subsId != null" >
        subs_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="subjectType != null" >
        #{subjectType,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=BIGINT},
      </if>
      <if test="featureCode != null" >
        #{featureCode,jdbcType=VARCHAR},
      </if>
      <if test="bookStatus != null" >
        #{bookStatus,jdbcType=VARCHAR},
      </if>
      <if test="effectDate != null" >
        #{effectDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expireDate != null" >
        #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subsFreezeId != null" >
        #{subsFreezeId,jdbcType=BIGINT},
      </if>
      <if test="subsId != null" >
        #{subsId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.balance.dao.mapper.bo.FunFundBookCriteria" resultType="java.lang.Integer" >
    select count(*) from fun_fund_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fun_fund_book
    <set >
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.subjectType != null" >
        subject_type = #{record.subjectType,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=BIGINT},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=BIGINT},
      </if>
      <if test="record.featureCode != null" >
        feature_code = #{record.featureCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bookStatus != null" >
        book_status = #{record.bookStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.effectDate != null" >
        effect_date = #{record.effectDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireDate != null" >
        expire_date = #{record.expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.subsFreezeId != null" >
        subs_freeze_id = #{record.subsFreezeId,jdbcType=BIGINT},
      </if>
      <if test="record.subsId != null" >
        subs_id = #{record.subsId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fun_fund_book
    set book_id = #{record.bookId,jdbcType=BIGINT},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      subject_type = #{record.subjectType,jdbcType=VARCHAR},
      subject_id = #{record.subjectId,jdbcType=BIGINT},
      balance = #{record.balance,jdbcType=BIGINT},
      feature_code = #{record.featureCode,jdbcType=VARCHAR},
      book_status = #{record.bookStatus,jdbcType=VARCHAR},
      effect_date = #{record.effectDate,jdbcType=TIMESTAMP},
      expire_date = #{record.expireDate,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      subs_freeze_id = #{record.subsFreezeId,jdbcType=BIGINT},
      subs_id = #{record.subsId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.slp.balance.dao.mapper.bo.FunFundBook" >
    update fun_fund_book
    <set >
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="subjectType != null" >
        subject_type = #{subjectType,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=BIGINT},
      </if>
      <if test="featureCode != null" >
        feature_code = #{featureCode,jdbcType=VARCHAR},
      </if>
      <if test="bookStatus != null" >
        book_status = #{bookStatus,jdbcType=VARCHAR},
      </if>
      <if test="effectDate != null" >
        effect_date = #{effectDate,jdbcType=TIMESTAMP},
      </if>
      <if test="expireDate != null" >
        expire_date = #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subsFreezeId != null" >
        subs_freeze_id = #{subsFreezeId,jdbcType=BIGINT},
      </if>
      <if test="subsId != null" >
        subs_id = #{subsId,jdbcType=BIGINT},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.slp.balance.dao.mapper.bo.FunFundBook" >
    update fun_fund_book
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      subject_type = #{subjectType,jdbcType=VARCHAR},
      subject_id = #{subjectId,jdbcType=BIGINT},
      balance = #{balance,jdbcType=BIGINT},
      feature_code = #{featureCode,jdbcType=VARCHAR},
      book_status = #{bookStatus,jdbcType=VARCHAR},
      effect_date = #{effectDate,jdbcType=TIMESTAMP},
      expire_date = #{expireDate,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      subs_freeze_id = #{subsFreezeId,jdbcType=BIGINT},
      subs_id = #{subsId,jdbcType=BIGINT}
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>
</mapper>