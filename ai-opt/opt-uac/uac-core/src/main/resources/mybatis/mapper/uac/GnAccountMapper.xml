<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.opt.uac.dao.mapper.interfaces.GnAccountMapper" >
  <resultMap id="BaseResultMap" type="com.ai.opt.uac.dao.mapper.bo.GnAccount" >
    <id column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="account_password" property="accountPassword" jdbcType="VARCHAR" />
    <result column="account_type" property="accountType" jdbcType="VARCHAR" />
    <result column="account_level" property="accountLevel" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="active_time" property="activeTime" jdbcType="TIMESTAMP" />
    <result column="inactive_time" property="inactiveTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_account_id" property="createAccountId" jdbcType="BIGINT" />
    <result column="update_account_id" property="updateAccountId" jdbcType="BIGINT" />
    <result column="weixin" property="weixin" jdbcType="VARCHAR" />
    <result column="weibo" property="weibo" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="last_update_pwd_time" property="lastUpdatePwdTime" jdbcType="TIMESTAMP" />
    <result column="token" property="token" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    account_id, tenant_id, account_name, nick_name, phone, email, account_password, account_type, 
    account_level, state, active_time, inactive_time, create_time, update_time, create_account_id, 
    update_account_id, weixin, weibo, qq, last_update_pwd_time, token
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.opt.uac.dao.mapper.bo.GnAccountCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from gn_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Long" >
    select 
    <include refid="Base_Column_List" />
    from gn_account
    where account_id = #{accountId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Long" >
    delete from gn_account
    where account_id = #{accountId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.opt.uac.dao.mapper.bo.GnAccountCriteria" >
    delete from gn_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.opt.uac.dao.mapper.bo.GnAccount" >
    insert into gn_account (account_id, tenant_id, account_name, 
      nick_name, phone, email, 
      account_password, account_type, account_level, 
      state, active_time, inactive_time, 
      create_time, update_time, create_account_id, 
      update_account_id, weixin, weibo, 
      qq, last_update_pwd_time, token
      )
    values (#{accountId,jdbcType=BIGINT}, #{tenantId,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{accountPassword,jdbcType=VARCHAR}, #{accountType,jdbcType=VARCHAR}, #{accountLevel,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{activeTime,jdbcType=TIMESTAMP}, #{inactiveTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createAccountId,jdbcType=BIGINT}, 
      #{updateAccountId,jdbcType=BIGINT}, #{weixin,jdbcType=VARCHAR}, #{weibo,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{lastUpdatePwdTime,jdbcType=TIMESTAMP}, #{token,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.opt.uac.dao.mapper.bo.GnAccount" >
    insert into gn_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="accountPassword != null" >
        account_password,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="accountLevel != null" >
        account_level,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="activeTime != null" >
        active_time,
      </if>
      <if test="inactiveTime != null" >
        inactive_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createAccountId != null" >
        create_account_id,
      </if>
      <if test="updateAccountId != null" >
        update_account_id,
      </if>
      <if test="weixin != null" >
        weixin,
      </if>
      <if test="weibo != null" >
        weibo,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="lastUpdatePwdTime != null" >
        last_update_pwd_time,
      </if>
      <if test="token != null" >
        token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="accountPassword != null" >
        #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountLevel != null" >
        #{accountLevel,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null" >
        #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inactiveTime != null" >
        #{inactiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAccountId != null" >
        #{createAccountId,jdbcType=BIGINT},
      </if>
      <if test="updateAccountId != null" >
        #{updateAccountId,jdbcType=BIGINT},
      </if>
      <if test="weixin != null" >
        #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null" >
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatePwdTime != null" >
        #{lastUpdatePwdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.opt.uac.dao.mapper.bo.GnAccountCriteria" resultType="java.lang.Integer" >
    select count(*) from gn_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gn_account
    <set >
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.accountPassword != null" >
        account_password = #{record.accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null" >
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.accountLevel != null" >
        account_level = #{record.accountLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.activeTime != null" >
        active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inactiveTime != null" >
        inactive_time = #{record.inactiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createAccountId != null" >
        create_account_id = #{record.createAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.updateAccountId != null" >
        update_account_id = #{record.updateAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.weixin != null" >
        weixin = #{record.weixin,jdbcType=VARCHAR},
      </if>
      <if test="record.weibo != null" >
        weibo = #{record.weibo,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdatePwdTime != null" >
        last_update_pwd_time = #{record.lastUpdatePwdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.token != null" >
        token = #{record.token,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gn_account
    set account_id = #{record.accountId,jdbcType=BIGINT},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      account_password = #{record.accountPassword,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      account_level = #{record.accountLevel,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      inactive_time = #{record.inactiveTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_account_id = #{record.createAccountId,jdbcType=BIGINT},
      update_account_id = #{record.updateAccountId,jdbcType=BIGINT},
      weixin = #{record.weixin,jdbcType=VARCHAR},
      weibo = #{record.weibo,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      last_update_pwd_time = #{record.lastUpdatePwdTime,jdbcType=TIMESTAMP},
      token = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.opt.uac.dao.mapper.bo.GnAccount" >
    update gn_account
    <set >
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="accountPassword != null" >
        account_password = #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountLevel != null" >
        account_level = #{accountLevel,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null" >
        active_time = #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inactiveTime != null" >
        inactive_time = #{inactiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAccountId != null" >
        create_account_id = #{createAccountId,jdbcType=BIGINT},
      </if>
      <if test="updateAccountId != null" >
        update_account_id = #{updateAccountId,jdbcType=BIGINT},
      </if>
      <if test="weixin != null" >
        weixin = #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null" >
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatePwdTime != null" >
        last_update_pwd_time = #{lastUpdatePwdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.opt.uac.dao.mapper.bo.GnAccount" >
    update gn_account
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      account_password = #{accountPassword,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=VARCHAR},
      account_level = #{accountLevel,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      active_time = #{activeTime,jdbcType=TIMESTAMP},
      inactive_time = #{inactiveTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_account_id = #{createAccountId,jdbcType=BIGINT},
      update_account_id = #{updateAccountId,jdbcType=BIGINT},
      weixin = #{weixin,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      last_update_pwd_time = #{lastUpdatePwdTime,jdbcType=TIMESTAMP},
      token = #{token,jdbcType=VARCHAR}
    where account_id = #{accountId,jdbcType=BIGINT}
  </update>
</mapper>