<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.order.dao.mapper.interfaces.OrdOdFeeOffsetMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.order.dao.mapper.bo.OrdOdFeeOffset" >
    <id column="FEE_OFFSET_ID" property="feeOffsetId" jdbcType="BIGINT" />
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="BALACNE_IF_ID" property="balacneIfId" jdbcType="BIGINT" />
    <result column="ORDER_ID" property="orderId" jdbcType="BIGINT" />
    <result column="PROD_DETAL_ID" property="prodDetalId" jdbcType="BIGINT" />
    <result column="PROD_ID" property="prodId" jdbcType="VARCHAR" />
    <result column="OFFSET_FEE" property="offsetFee" jdbcType="BIGINT" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    FEE_OFFSET_ID, TENANT_ID, BALACNE_IF_ID, ORDER_ID, PROD_DETAL_ID, PROD_ID, OFFSET_FEE, 
    REMARK
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdFeeOffsetCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ord_od_fee_offset
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="long" >
    select 
    <include refid="Base_Column_List" />
    from ord_od_fee_offset
    where FEE_OFFSET_ID = #{feeOffsetId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="long" >
    delete from ord_od_fee_offset
    where FEE_OFFSET_ID = #{feeOffsetId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdFeeOffsetCriteria" >
    delete from ord_od_fee_offset
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdFeeOffset" >
    insert into ord_od_fee_offset (FEE_OFFSET_ID, TENANT_ID, BALACNE_IF_ID, 
      ORDER_ID, PROD_DETAL_ID, PROD_ID, 
      OFFSET_FEE, REMARK)
    values (#{feeOffsetId,jdbcType=BIGINT}, #{tenantId,jdbcType=VARCHAR}, #{balacneIfId,jdbcType=BIGINT}, 
      #{orderId,jdbcType=BIGINT}, #{prodDetalId,jdbcType=BIGINT}, #{prodId,jdbcType=VARCHAR}, 
      #{offsetFee,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdFeeOffset" >
    insert into ord_od_fee_offset
    <trim prefix="(" suffix=")" suffixOverrides="," >
      FEE_OFFSET_ID,
      <if test="tenantId != null" >
        TENANT_ID,
      </if>
      BALACNE_IF_ID,
      ORDER_ID,
      PROD_DETAL_ID,
      <if test="prodId != null" >
        PROD_ID,
      </if>
      OFFSET_FEE,
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{feeOffsetId,jdbcType=BIGINT},
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      #{balacneIfId,jdbcType=BIGINT},
      #{orderId,jdbcType=BIGINT},
      #{prodDetalId,jdbcType=BIGINT},
      <if test="prodId != null" >
        #{prodId,jdbcType=VARCHAR},
      </if>
      #{offsetFee,jdbcType=BIGINT},
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdFeeOffsetCriteria" resultType="java.lang.Integer" >
    select count(*) from ord_od_fee_offset
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ord_od_fee_offset
    <set >
      <if test="record.feeOffsetId != null" >
        FEE_OFFSET_ID = #{record.feeOffsetId,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null" >
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.balacneIfId != null" >
        BALACNE_IF_ID = #{record.balacneIfId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.prodDetalId != null" >
        PROD_DETAL_ID = #{record.prodDetalId,jdbcType=BIGINT},
      </if>
      <if test="record.prodId != null" >
        PROD_ID = #{record.prodId,jdbcType=VARCHAR},
      </if>
      <if test="record.offsetFee != null" >
        OFFSET_FEE = #{record.offsetFee,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ord_od_fee_offset
    set FEE_OFFSET_ID = #{record.feeOffsetId,jdbcType=BIGINT},
      TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      BALACNE_IF_ID = #{record.balacneIfId,jdbcType=BIGINT},
      ORDER_ID = #{record.orderId,jdbcType=BIGINT},
      PROD_DETAL_ID = #{record.prodDetalId,jdbcType=BIGINT},
      PROD_ID = #{record.prodId,jdbcType=VARCHAR},
      OFFSET_FEE = #{record.offsetFee,jdbcType=BIGINT},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdFeeOffset" >
    update ord_od_fee_offset
    <set >
      <if test="tenantId != null" >
        TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="balacneIfId != null" >
        BALACNE_IF_ID = #{balacneIfId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="prodDetalId != null" >
        PROD_DETAL_ID = #{prodDetalId,jdbcType=BIGINT},
      </if>
      <if test="prodId != null" >
        PROD_ID = #{prodId,jdbcType=VARCHAR},
      </if>
      <if test="offsetFee != null" >
        OFFSET_FEE = #{offsetFee,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where FEE_OFFSET_ID = #{feeOffsetId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.slp.order.dao.mapper.bo.OrdOdFeeOffset" >
    update ord_od_fee_offset
    set TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      BALACNE_IF_ID = #{balacneIfId,jdbcType=BIGINT},
      ORDER_ID = #{orderId,jdbcType=BIGINT},
      PROD_DETAL_ID = #{prodDetalId,jdbcType=BIGINT},
      PROD_ID = #{prodId,jdbcType=VARCHAR},
      OFFSET_FEE = #{offsetFee,jdbcType=BIGINT},
      REMARK = #{remark,jdbcType=VARCHAR}
    where FEE_OFFSET_ID = #{feeOffsetId,jdbcType=BIGINT}
  </update>
</mapper>