<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.order.dao.mapper.interfaces.OrdBalacneIfMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.order.dao.mapper.bo.OrdBalacneIf" >
    <id column="BALACNE_IF_ID" property="balacneIfId" jdbcType="BIGINT" />
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="ORDER_ID" property="orderId" jdbcType="BIGINT" />
    <result column="PAY_STYLE" property="payStyle" jdbcType="VARCHAR" />
    <result column="PAY_FEE" property="payFee" jdbcType="BIGINT" />
    <result column="PAY_SYSTEM_ID" property="paySystemId" jdbcType="VARCHAR" />
    <result column="EXTERNAL_ID" property="externalId" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BALACNE_IF_ID, TENANT_ID, ORDER_ID, PAY_STYLE, PAY_FEE, PAY_SYSTEM_ID, EXTERNAL_ID, 
    CREATE_TIME, REMARK
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.order.dao.mapper.bo.OrdBalacneIfCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ord_balacne_if
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="long" >
    select 
    <include refid="Base_Column_List" />
    from ord_balacne_if
    where BALACNE_IF_ID = #{balacneIfId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="long" >
    delete from ord_balacne_if
    where BALACNE_IF_ID = #{balacneIfId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.slp.order.dao.mapper.bo.OrdBalacneIfCriteria" >
    delete from ord_balacne_if
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.order.dao.mapper.bo.OrdBalacneIf" >
    insert into ord_balacne_if (BALACNE_IF_ID, TENANT_ID, ORDER_ID, 
      PAY_STYLE, PAY_FEE, PAY_SYSTEM_ID, 
      EXTERNAL_ID, CREATE_TIME, REMARK
      )
    values (#{balacneIfId,jdbcType=BIGINT}, #{tenantId,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, 
      #{payStyle,jdbcType=VARCHAR}, #{payFee,jdbcType=BIGINT}, #{paySystemId,jdbcType=VARCHAR}, 
      #{externalId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.order.dao.mapper.bo.OrdBalacneIf" >
    insert delayed into ord_balacne_if
    <trim prefix="(" suffix=")" suffixOverrides="," >
      BALACNE_IF_ID,
      <if test="tenantId != null" >
        TENANT_ID,
      </if>
      ORDER_ID,
      <if test="payStyle != null" >
        PAY_STYLE,
      </if>
      PAY_FEE,
      <if test="paySystemId != null" >
        PAY_SYSTEM_ID,
      </if>
      <if test="externalId != null" >
        EXTERNAL_ID,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{balacneIfId,jdbcType=BIGINT},
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      #{orderId,jdbcType=BIGINT},
      <if test="payStyle != null" >
        #{payStyle,jdbcType=VARCHAR},
      </if>
      #{payFee,jdbcType=BIGINT},
      <if test="paySystemId != null" >
        #{paySystemId,jdbcType=VARCHAR},
      </if>
      <if test="externalId != null" >
        #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.order.dao.mapper.bo.OrdBalacneIfCriteria" resultType="java.lang.Integer" >
    select count(*) from ord_balacne_if
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ord_balacne_if
    <set >
      <if test="record.balacneIfId != null" >
        BALACNE_IF_ID = #{record.balacneIfId,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null" >
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.payStyle != null" >
        PAY_STYLE = #{record.payStyle,jdbcType=VARCHAR},
      </if>
      <if test="record.payFee != null" >
        PAY_FEE = #{record.payFee,jdbcType=BIGINT},
      </if>
      <if test="record.paySystemId != null" >
        PAY_SYSTEM_ID = #{record.paySystemId,jdbcType=VARCHAR},
      </if>
      <if test="record.externalId != null" >
        EXTERNAL_ID = #{record.externalId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ord_balacne_if
    set BALACNE_IF_ID = #{record.balacneIfId,jdbcType=BIGINT},
      TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      ORDER_ID = #{record.orderId,jdbcType=BIGINT},
      PAY_STYLE = #{record.payStyle,jdbcType=VARCHAR},
      PAY_FEE = #{record.payFee,jdbcType=BIGINT},
      PAY_SYSTEM_ID = #{record.paySystemId,jdbcType=VARCHAR},
      EXTERNAL_ID = #{record.externalId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.slp.order.dao.mapper.bo.OrdBalacneIf" >
    update ord_balacne_if
    <set >
      <if test="tenantId != null" >
        TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="payStyle != null" >
        PAY_STYLE = #{payStyle,jdbcType=VARCHAR},
      </if>
      <if test="payFee != null" >
        PAY_FEE = #{payFee,jdbcType=BIGINT},
      </if>
      <if test="paySystemId != null" >
        PAY_SYSTEM_ID = #{paySystemId,jdbcType=VARCHAR},
      </if>
      <if test="externalId != null" >
        EXTERNAL_ID = #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where BALACNE_IF_ID = #{balacneIfId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.slp.order.dao.mapper.bo.OrdBalacneIf" >
    update ord_balacne_if
    set TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      ORDER_ID = #{orderId,jdbcType=BIGINT},
      PAY_STYLE = #{payStyle,jdbcType=VARCHAR},
      PAY_FEE = #{payFee,jdbcType=BIGINT},
      PAY_SYSTEM_ID = #{paySystemId,jdbcType=VARCHAR},
      EXTERNAL_ID = #{externalId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      REMARK = #{remark,jdbcType=VARCHAR}
    where BALACNE_IF_ID = #{balacneIfId,jdbcType=BIGINT}
  </update>
</mapper>