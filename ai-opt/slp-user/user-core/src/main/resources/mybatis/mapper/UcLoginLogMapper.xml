<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.user.dao.mapper.interfaces.UcLoginLogMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.user.dao.mapper.bo.UcLoginLog" >
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="LOGIN_SEQ_ID" property="loginSeqId" jdbcType="VARCHAR" />
    <result column="LOGIN_TIME" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="LOGIN_PROVINE" property="loginProvine" jdbcType="VARCHAR" />
    <result column="LOGIN_CITY" property="loginCity" jdbcType="VARCHAR" />
    <result column="LOGIN_IP_ADDR" property="loginIpAddr" jdbcType="VARCHAR" />
    <result column="PHONE_PROVINE" property="phoneProvine" jdbcType="VARCHAR" />
    <result column="PHONE_CITY" property="phoneCity" jdbcType="VARCHAR" />
    <result column="LOGIN_MP" property="loginMp" jdbcType="VARCHAR" />
    <result column="USER_PHONE" property="userPhone" jdbcType="VARCHAR" />
    <result column="USER_PHONE_TYPE" property="userPhoneType" jdbcType="VARCHAR" />
    <result column="USER_PHONE_IMEI" property="userPhoneImei" jdbcType="VARCHAR" />
    <result column="PROVINE" property="provine" jdbcType="VARCHAR" />
    <result column="CITY" property="city" jdbcType="VARCHAR" />
    <result column="LOGIN_CHL" property="loginChl" jdbcType="VARCHAR" />
    <result column="LOGIN_WAY" property="loginWay" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TENANT_ID, USER_ID, LOGIN_SEQ_ID, LOGIN_TIME, LOGIN_PROVINE, LOGIN_CITY, LOGIN_IP_ADDR, 
    PHONE_PROVINE, PHONE_CITY, LOGIN_MP, USER_PHONE, USER_PHONE_TYPE, USER_PHONE_IMEI, 
    PROVINE, CITY, LOGIN_CHL, LOGIN_WAY
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.user.dao.mapper.bo.UcLoginLogCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from uc_login_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ai.slp.user.dao.mapper.bo.UcLoginLogCriteria" >
    delete from uc_login_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.user.dao.mapper.bo.UcLoginLog" >
    insert into uc_login_log (TENANT_ID, USER_ID, LOGIN_SEQ_ID, 
      LOGIN_TIME, LOGIN_PROVINE, LOGIN_CITY, 
      LOGIN_IP_ADDR, PHONE_PROVINE, PHONE_CITY, 
      LOGIN_MP, USER_PHONE, USER_PHONE_TYPE, 
      USER_PHONE_IMEI, PROVINE, CITY, 
      LOGIN_CHL, LOGIN_WAY)
    values (#{tenantId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{loginSeqId,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{loginProvine,jdbcType=VARCHAR}, #{loginCity,jdbcType=VARCHAR}, 
      #{loginIpAddr,jdbcType=VARCHAR}, #{phoneProvine,jdbcType=VARCHAR}, #{phoneCity,jdbcType=VARCHAR}, 
      #{loginMp,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{userPhoneType,jdbcType=VARCHAR}, 
      #{userPhoneImei,jdbcType=VARCHAR}, #{provine,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{loginChl,jdbcType=VARCHAR}, #{loginWay,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.user.dao.mapper.bo.UcLoginLog" >
    insert into uc_login_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        TENANT_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="loginSeqId != null" >
        LOGIN_SEQ_ID,
      </if>
      <if test="loginTime != null" >
        LOGIN_TIME,
      </if>
      <if test="loginProvine != null" >
        LOGIN_PROVINE,
      </if>
      <if test="loginCity != null" >
        LOGIN_CITY,
      </if>
      <if test="loginIpAddr != null" >
        LOGIN_IP_ADDR,
      </if>
      <if test="phoneProvine != null" >
        PHONE_PROVINE,
      </if>
      <if test="phoneCity != null" >
        PHONE_CITY,
      </if>
      <if test="loginMp != null" >
        LOGIN_MP,
      </if>
      <if test="userPhone != null" >
        USER_PHONE,
      </if>
      <if test="userPhoneType != null" >
        USER_PHONE_TYPE,
      </if>
      <if test="userPhoneImei != null" >
        USER_PHONE_IMEI,
      </if>
      <if test="provine != null" >
        PROVINE,
      </if>
      <if test="city != null" >
        CITY,
      </if>
      <if test="loginChl != null" >
        LOGIN_CHL,
      </if>
      <if test="loginWay != null" >
        LOGIN_WAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="loginSeqId != null" >
        #{loginSeqId,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginProvine != null" >
        #{loginProvine,jdbcType=VARCHAR},
      </if>
      <if test="loginCity != null" >
        #{loginCity,jdbcType=VARCHAR},
      </if>
      <if test="loginIpAddr != null" >
        #{loginIpAddr,jdbcType=VARCHAR},
      </if>
      <if test="phoneProvine != null" >
        #{phoneProvine,jdbcType=VARCHAR},
      </if>
      <if test="phoneCity != null" >
        #{phoneCity,jdbcType=VARCHAR},
      </if>
      <if test="loginMp != null" >
        #{loginMp,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userPhoneType != null" >
        #{userPhoneType,jdbcType=VARCHAR},
      </if>
      <if test="userPhoneImei != null" >
        #{userPhoneImei,jdbcType=VARCHAR},
      </if>
      <if test="provine != null" >
        #{provine,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="loginChl != null" >
        #{loginChl,jdbcType=VARCHAR},
      </if>
      <if test="loginWay != null" >
        #{loginWay,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.user.dao.mapper.bo.UcLoginLogCriteria" resultType="java.lang.Integer" >
    select count(*) from uc_login_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update uc_login_log
    <set >
      <if test="record.tenantId != null" >
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginSeqId != null" >
        LOGIN_SEQ_ID = #{record.loginSeqId,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        LOGIN_TIME = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginProvine != null" >
        LOGIN_PROVINE = #{record.loginProvine,jdbcType=VARCHAR},
      </if>
      <if test="record.loginCity != null" >
        LOGIN_CITY = #{record.loginCity,jdbcType=VARCHAR},
      </if>
      <if test="record.loginIpAddr != null" >
        LOGIN_IP_ADDR = #{record.loginIpAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneProvine != null" >
        PHONE_PROVINE = #{record.phoneProvine,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneCity != null" >
        PHONE_CITY = #{record.phoneCity,jdbcType=VARCHAR},
      </if>
      <if test="record.loginMp != null" >
        LOGIN_MP = #{record.loginMp,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null" >
        USER_PHONE = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhoneType != null" >
        USER_PHONE_TYPE = #{record.userPhoneType,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhoneImei != null" >
        USER_PHONE_IMEI = #{record.userPhoneImei,jdbcType=VARCHAR},
      </if>
      <if test="record.provine != null" >
        PROVINE = #{record.provine,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        CITY = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.loginChl != null" >
        LOGIN_CHL = #{record.loginChl,jdbcType=VARCHAR},
      </if>
      <if test="record.loginWay != null" >
        LOGIN_WAY = #{record.loginWay,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update uc_login_log
    set TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      LOGIN_SEQ_ID = #{record.loginSeqId,jdbcType=VARCHAR},
      LOGIN_TIME = #{record.loginTime,jdbcType=TIMESTAMP},
      LOGIN_PROVINE = #{record.loginProvine,jdbcType=VARCHAR},
      LOGIN_CITY = #{record.loginCity,jdbcType=VARCHAR},
      LOGIN_IP_ADDR = #{record.loginIpAddr,jdbcType=VARCHAR},
      PHONE_PROVINE = #{record.phoneProvine,jdbcType=VARCHAR},
      PHONE_CITY = #{record.phoneCity,jdbcType=VARCHAR},
      LOGIN_MP = #{record.loginMp,jdbcType=VARCHAR},
      USER_PHONE = #{record.userPhone,jdbcType=VARCHAR},
      USER_PHONE_TYPE = #{record.userPhoneType,jdbcType=VARCHAR},
      USER_PHONE_IMEI = #{record.userPhoneImei,jdbcType=VARCHAR},
      PROVINE = #{record.provine,jdbcType=VARCHAR},
      CITY = #{record.city,jdbcType=VARCHAR},
      LOGIN_CHL = #{record.loginChl,jdbcType=VARCHAR},
      LOGIN_WAY = #{record.loginWay,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>