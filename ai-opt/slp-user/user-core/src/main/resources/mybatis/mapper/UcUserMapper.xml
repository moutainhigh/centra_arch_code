<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.slp.user.dao.mapper.interfaces.UcUserMapper" >
  <resultMap id="BaseResultMap" type="com.ai.slp.user.dao.mapper.bo.UcUser" >
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="USER_TYPE" property="userType" jdbcType="VARCHAR" />
    <result column="USER_FLAG" property="userFlag" jdbcType="VARCHAR" />
    <result column="USER_STATE" property="userState" jdbcType="VARCHAR" />
    <result column="VIP_LEVEL" property="vipLevel" jdbcType="VARCHAR" />
    <result column="SAFETY_LEVEL" property="safetyLevel" jdbcType="VARCHAR" />
    <result column="USER_LOGIN_NAME" property="userLoginName" jdbcType="VARCHAR" />
    <result column="USER_LOGIN_PWD" property="userLoginPwd" jdbcType="VARCHAR" />
    <result column="PWD_SAFETY_LEVEL" property="pwdSafetyLevel" jdbcType="VARCHAR" />
    <result column="USER_MP" property="userMp" jdbcType="VARCHAR" />
    <result column="USER_EMAIL" property="userEmail" jdbcType="VARCHAR" />
    <result column="EMAIL_VALIDATE_FLAG" property="emailValidateFlag" jdbcType="VARCHAR" />
    <result column="USER_NICKNAME" property="userNickname" jdbcType="VARCHAR" />
    <result column="ORTRAIT_FILE_ID" property="ortraitFileId" jdbcType="VARCHAR" />
    <result column="PROVINCE_CODE" property="provinceCode" jdbcType="VARCHAR" />
    <result column="CITY_CODE" property="cityCode" jdbcType="VARCHAR" />
    <result column="REGISTER_WAY" property="registerWay" jdbcType="VARCHAR" />
    <result column="REGISTER_SOURCE" property="registerSource" jdbcType="VARCHAR" />
    <result column="CREDIT_FLAG" property="creditFlag" jdbcType="VARCHAR" />
    <result column="STATE_CHG_TIME" property="stateChgTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_CHL_ID" property="createChlId" jdbcType="VARCHAR" />
    <result column="CREATE_OPER_ID" property="createOperId" jdbcType="BIGINT" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_CHL_ID" property="updateChlId" jdbcType="VARCHAR" />
    <result column="UPDATE_OPER_ID" property="updateOperId" jdbcType="BIGINT" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="USER_EMAIL_TOKEN" property="userEmailToken" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TENANT_ID, USER_ID, USER_TYPE, USER_FLAG, USER_STATE, VIP_LEVEL, SAFETY_LEVEL, USER_LOGIN_NAME, 
    USER_LOGIN_PWD, PWD_SAFETY_LEVEL, USER_MP, USER_EMAIL, EMAIL_VALIDATE_FLAG, USER_NICKNAME, 
    ORTRAIT_FILE_ID, PROVINCE_CODE, CITY_CODE, REGISTER_WAY, REGISTER_SOURCE, CREDIT_FLAG, 
    STATE_CHG_TIME, CREATE_TIME, CREATE_CHL_ID, CREATE_OPER_ID, UPDATE_TIME, UPDATE_CHL_ID, 
    UPDATE_OPER_ID, REMARK, USER_EMAIL_TOKEN
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.slp.user.dao.mapper.bo.UcUserCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from uc_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ai.slp.user.dao.mapper.bo.UcUserCriteria" >
    delete from uc_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.slp.user.dao.mapper.bo.UcUser" >
    insert into uc_user (TENANT_ID, USER_ID, USER_TYPE, 
      USER_FLAG, USER_STATE, VIP_LEVEL, 
      SAFETY_LEVEL, USER_LOGIN_NAME, USER_LOGIN_PWD, 
      PWD_SAFETY_LEVEL, USER_MP, USER_EMAIL, 
      EMAIL_VALIDATE_FLAG, USER_NICKNAME, ORTRAIT_FILE_ID, 
      PROVINCE_CODE, CITY_CODE, REGISTER_WAY, 
      REGISTER_SOURCE, CREDIT_FLAG, STATE_CHG_TIME, 
      CREATE_TIME, CREATE_CHL_ID, CREATE_OPER_ID, 
      UPDATE_TIME, UPDATE_CHL_ID, UPDATE_OPER_ID, 
      REMARK, USER_EMAIL_TOKEN)
    values (#{tenantId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, 
      #{userFlag,jdbcType=VARCHAR}, #{userState,jdbcType=VARCHAR}, #{vipLevel,jdbcType=VARCHAR}, 
      #{safetyLevel,jdbcType=VARCHAR}, #{userLoginName,jdbcType=VARCHAR}, #{userLoginPwd,jdbcType=VARCHAR}, 
      #{pwdSafetyLevel,jdbcType=VARCHAR}, #{userMp,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{emailValidateFlag,jdbcType=VARCHAR}, #{userNickname,jdbcType=VARCHAR}, #{ortraitFileId,jdbcType=VARCHAR}, 
      #{provinceCode,jdbcType=VARCHAR}, #{cityCode,jdbcType=VARCHAR}, #{registerWay,jdbcType=VARCHAR}, 
      #{registerSource,jdbcType=VARCHAR}, #{creditFlag,jdbcType=VARCHAR}, #{stateChgTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createChlId,jdbcType=VARCHAR}, #{createOperId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateChlId,jdbcType=VARCHAR}, #{updateOperId,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR}, #{userEmailToken,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.slp.user.dao.mapper.bo.UcUser" >
    insert into uc_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        TENANT_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="userType != null" >
        USER_TYPE,
      </if>
      <if test="userFlag != null" >
        USER_FLAG,
      </if>
      <if test="userState != null" >
        USER_STATE,
      </if>
      <if test="vipLevel != null" >
        VIP_LEVEL,
      </if>
      <if test="safetyLevel != null" >
        SAFETY_LEVEL,
      </if>
      <if test="userLoginName != null" >
        USER_LOGIN_NAME,
      </if>
      <if test="userLoginPwd != null" >
        USER_LOGIN_PWD,
      </if>
      <if test="pwdSafetyLevel != null" >
        PWD_SAFETY_LEVEL,
      </if>
      <if test="userMp != null" >
        USER_MP,
      </if>
      <if test="userEmail != null" >
        USER_EMAIL,
      </if>
      <if test="emailValidateFlag != null" >
        EMAIL_VALIDATE_FLAG,
      </if>
      <if test="userNickname != null" >
        USER_NICKNAME,
      </if>
      <if test="ortraitFileId != null" >
        ORTRAIT_FILE_ID,
      </if>
      <if test="provinceCode != null" >
        PROVINCE_CODE,
      </if>
      <if test="cityCode != null" >
        CITY_CODE,
      </if>
      <if test="registerWay != null" >
        REGISTER_WAY,
      </if>
      <if test="registerSource != null" >
        REGISTER_SOURCE,
      </if>
      <if test="creditFlag != null" >
        CREDIT_FLAG,
      </if>
      <if test="stateChgTime != null" >
        STATE_CHG_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createChlId != null" >
        CREATE_CHL_ID,
      </if>
      <if test="createOperId != null" >
        CREATE_OPER_ID,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updateChlId != null" >
        UPDATE_CHL_ID,
      </if>
      <if test="updateOperId != null" >
        UPDATE_OPER_ID,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="userEmailToken != null" >
        USER_EMAIL_TOKEN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userFlag != null" >
        #{userFlag,jdbcType=VARCHAR},
      </if>
      <if test="userState != null" >
        #{userState,jdbcType=VARCHAR},
      </if>
      <if test="vipLevel != null" >
        #{vipLevel,jdbcType=VARCHAR},
      </if>
      <if test="safetyLevel != null" >
        #{safetyLevel,jdbcType=VARCHAR},
      </if>
      <if test="userLoginName != null" >
        #{userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="userLoginPwd != null" >
        #{userLoginPwd,jdbcType=VARCHAR},
      </if>
      <if test="pwdSafetyLevel != null" >
        #{pwdSafetyLevel,jdbcType=VARCHAR},
      </if>
      <if test="userMp != null" >
        #{userMp,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="emailValidateFlag != null" >
        #{emailValidateFlag,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null" >
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="ortraitFileId != null" >
        #{ortraitFileId,jdbcType=VARCHAR},
      </if>
      <if test="provinceCode != null" >
        #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="registerWay != null" >
        #{registerWay,jdbcType=VARCHAR},
      </if>
      <if test="registerSource != null" >
        #{registerSource,jdbcType=VARCHAR},
      </if>
      <if test="creditFlag != null" >
        #{creditFlag,jdbcType=VARCHAR},
      </if>
      <if test="stateChgTime != null" >
        #{stateChgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createChlId != null" >
        #{createChlId,jdbcType=VARCHAR},
      </if>
      <if test="createOperId != null" >
        #{createOperId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateChlId != null" >
        #{updateChlId,jdbcType=VARCHAR},
      </if>
      <if test="updateOperId != null" >
        #{updateOperId,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userEmailToken != null" >
        #{userEmailToken,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.slp.user.dao.mapper.bo.UcUserCriteria" resultType="java.lang.Integer" >
    select count(*) from uc_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update uc_user
    <set >
      <if test="record.tenantId != null" >
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null" >
        USER_TYPE = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.userFlag != null" >
        USER_FLAG = #{record.userFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.userState != null" >
        USER_STATE = #{record.userState,jdbcType=VARCHAR},
      </if>
      <if test="record.vipLevel != null" >
        VIP_LEVEL = #{record.vipLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.safetyLevel != null" >
        SAFETY_LEVEL = #{record.safetyLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.userLoginName != null" >
        USER_LOGIN_NAME = #{record.userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="record.userLoginPwd != null" >
        USER_LOGIN_PWD = #{record.userLoginPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.pwdSafetyLevel != null" >
        PWD_SAFETY_LEVEL = #{record.pwdSafetyLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.userMp != null" >
        USER_MP = #{record.userMp,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null" >
        USER_EMAIL = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.emailValidateFlag != null" >
        EMAIL_VALIDATE_FLAG = #{record.emailValidateFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.userNickname != null" >
        USER_NICKNAME = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.ortraitFileId != null" >
        ORTRAIT_FILE_ID = #{record.ortraitFileId,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceCode != null" >
        PROVINCE_CODE = #{record.provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cityCode != null" >
        CITY_CODE = #{record.cityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.registerWay != null" >
        REGISTER_WAY = #{record.registerWay,jdbcType=VARCHAR},
      </if>
      <if test="record.registerSource != null" >
        REGISTER_SOURCE = #{record.registerSource,jdbcType=VARCHAR},
      </if>
      <if test="record.creditFlag != null" >
        CREDIT_FLAG = #{record.creditFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.stateChgTime != null" >
        STATE_CHG_TIME = #{record.stateChgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createChlId != null" >
        CREATE_CHL_ID = #{record.createChlId,jdbcType=VARCHAR},
      </if>
      <if test="record.createOperId != null" >
        CREATE_OPER_ID = #{record.createOperId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateChlId != null" >
        UPDATE_CHL_ID = #{record.updateChlId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateOperId != null" >
        UPDATE_OPER_ID = #{record.updateOperId,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmailToken != null" >
        USER_EMAIL_TOKEN = #{record.userEmailToken,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update uc_user
    set TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      USER_TYPE = #{record.userType,jdbcType=VARCHAR},
      USER_FLAG = #{record.userFlag,jdbcType=VARCHAR},
      USER_STATE = #{record.userState,jdbcType=VARCHAR},
      VIP_LEVEL = #{record.vipLevel,jdbcType=VARCHAR},
      SAFETY_LEVEL = #{record.safetyLevel,jdbcType=VARCHAR},
      USER_LOGIN_NAME = #{record.userLoginName,jdbcType=VARCHAR},
      USER_LOGIN_PWD = #{record.userLoginPwd,jdbcType=VARCHAR},
      PWD_SAFETY_LEVEL = #{record.pwdSafetyLevel,jdbcType=VARCHAR},
      USER_MP = #{record.userMp,jdbcType=VARCHAR},
      USER_EMAIL = #{record.userEmail,jdbcType=VARCHAR},
      EMAIL_VALIDATE_FLAG = #{record.emailValidateFlag,jdbcType=VARCHAR},
      USER_NICKNAME = #{record.userNickname,jdbcType=VARCHAR},
      ORTRAIT_FILE_ID = #{record.ortraitFileId,jdbcType=VARCHAR},
      PROVINCE_CODE = #{record.provinceCode,jdbcType=VARCHAR},
      CITY_CODE = #{record.cityCode,jdbcType=VARCHAR},
      REGISTER_WAY = #{record.registerWay,jdbcType=VARCHAR},
      REGISTER_SOURCE = #{record.registerSource,jdbcType=VARCHAR},
      CREDIT_FLAG = #{record.creditFlag,jdbcType=VARCHAR},
      STATE_CHG_TIME = #{record.stateChgTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_CHL_ID = #{record.createChlId,jdbcType=VARCHAR},
      CREATE_OPER_ID = #{record.createOperId,jdbcType=BIGINT},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      UPDATE_CHL_ID = #{record.updateChlId,jdbcType=VARCHAR},
      UPDATE_OPER_ID = #{record.updateOperId,jdbcType=BIGINT},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      USER_EMAIL_TOKEN = #{record.userEmailToken,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>