<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ifudata.ums.dao.mapper.interfaces.OrdServiceRouteConfigMapper" >
  <resultMap id="BaseResultMap" type="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfig" >
    <id column="route_id" property="routeId" jdbcType="BIGINT" />
    <result column="service_type" property="serviceType" jdbcType="VARCHAR" />
    <result column="route_param_name" property="routeParamName" jdbcType="VARCHAR" />
    <result column="route_param_value" property="routeParamValue" jdbcType="VARCHAR" />
    <result column="route_service" property="routeService" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfig" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    route_id, service_type, route_param_name, route_param_value, route_service, state
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfigCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ord_service_route_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfigCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ord_service_route_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ord_service_route_config
    where route_id = #{routeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Long" >
    delete from ord_service_route_config
    where route_id = #{routeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfigCriteria" >
    delete from ord_service_route_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfig" >
    insert into ord_service_route_config (route_id, service_type, route_param_name, 
      route_param_value, route_service, state, 
      remark)
    values (#{routeId,jdbcType=BIGINT}, #{serviceType,jdbcType=VARCHAR}, #{routeParamName,jdbcType=VARCHAR}, 
      #{routeParamValue,jdbcType=VARCHAR}, #{routeService,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfig" >
    insert into ord_service_route_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="routeId != null" >
        route_id,
      </if>
      <if test="serviceType != null" >
        service_type,
      </if>
      <if test="routeParamName != null" >
        route_param_name,
      </if>
      <if test="routeParamValue != null" >
        route_param_value,
      </if>
      <if test="routeService != null" >
        route_service,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="routeId != null" >
        #{routeId,jdbcType=BIGINT},
      </if>
      <if test="serviceType != null" >
        #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="routeParamName != null" >
        #{routeParamName,jdbcType=VARCHAR},
      </if>
      <if test="routeParamValue != null" >
        #{routeParamValue,jdbcType=VARCHAR},
      </if>
      <if test="routeService != null" >
        #{routeService,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfigCriteria" resultType="java.lang.Integer" >
    select count(*) from ord_service_route_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ord_service_route_config
    <set >
      <if test="record.routeId != null" >
        route_id = #{record.routeId,jdbcType=BIGINT},
      </if>
      <if test="record.serviceType != null" >
        service_type = #{record.serviceType,jdbcType=VARCHAR},
      </if>
      <if test="record.routeParamName != null" >
        route_param_name = #{record.routeParamName,jdbcType=VARCHAR},
      </if>
      <if test="record.routeParamValue != null" >
        route_param_value = #{record.routeParamValue,jdbcType=VARCHAR},
      </if>
      <if test="record.routeService != null" >
        route_service = #{record.routeService,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update ord_service_route_config
    set route_id = #{record.routeId,jdbcType=BIGINT},
      service_type = #{record.serviceType,jdbcType=VARCHAR},
      route_param_name = #{record.routeParamName,jdbcType=VARCHAR},
      route_param_value = #{record.routeParamValue,jdbcType=VARCHAR},
      route_service = #{record.routeService,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ord_service_route_config
    set route_id = #{record.routeId,jdbcType=BIGINT},
      service_type = #{record.serviceType,jdbcType=VARCHAR},
      route_param_name = #{record.routeParamName,jdbcType=VARCHAR},
      route_param_value = #{record.routeParamValue,jdbcType=VARCHAR},
      route_service = #{record.routeService,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfig" >
    update ord_service_route_config
    <set >
      <if test="serviceType != null" >
        service_type = #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="routeParamName != null" >
        route_param_name = #{routeParamName,jdbcType=VARCHAR},
      </if>
      <if test="routeParamValue != null" >
        route_param_value = #{routeParamValue,jdbcType=VARCHAR},
      </if>
      <if test="routeService != null" >
        route_service = #{routeService,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where route_id = #{routeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfig" >
    update ord_service_route_config
    set service_type = #{serviceType,jdbcType=VARCHAR},
      route_param_name = #{routeParamName,jdbcType=VARCHAR},
      route_param_value = #{routeParamValue,jdbcType=VARCHAR},
      route_service = #{routeService,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where route_id = #{routeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ifudata.ums.dao.mapper.bo.OrdServiceRouteConfig" >
    update ord_service_route_config
    set service_type = #{serviceType,jdbcType=VARCHAR},
      route_param_name = #{routeParamName,jdbcType=VARCHAR},
      route_param_value = #{routeParamValue,jdbcType=VARCHAR},
      route_service = #{routeService,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where route_id = #{routeId,jdbcType=BIGINT}
  </update>
</mapper>